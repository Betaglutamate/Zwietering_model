geom_point()+
xlab("GFP (A.u.)")+
ylab("Growth rate (1/min)")+
graph_theme +
theme(text = element_text(size = 20))
ggsave(filename = "Growthrate vs GFP.png", height = 7, width = 14)
all_conditions_df %>%
filter(Experiment %in% m63glu_string) %>%
ggplot(aes(x=growth_rate, y=meanGFP, color=Experiment)) +
geom_point()+
xlab("GFP (A.U.)")+
ylab("Growth rate (1/min)")+
graph_theme +
theme(text = element_text(size = 20))
ggsave(filename = "Growthrate vs GFP.png", height = 7, width = 14)
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
mutate(meanGR = median(growth_rate))%>%
ggplot(aes(x=osmolarity, y=meanGFP, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=100, alpha=0.7) +
ylab('GFP')+
xlab("Osmolarity")+
ggtitle("osmolarity vs GFP grouped by group and experiment")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
mutate(meanGR = median(growth_rate))%>%
filter(Experiment %in% m63glu_string) %>%
ggplot(aes(x=osmolarity, y=meanGFP, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=100, alpha=0.7) +
ylab('GFP')+
xlab("Osmolarity")+
ggtitle("osmolarity vs GFP grouped by group and experiment")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
mutate(meanGR = median(growth_rate))%>%
filter(Experiment %in% m63glu_string) %>%
ggplot(aes(x=osmolarity, y=meanGFP, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=100, alpha=0.7) +
ylab('GFP')+
xlab("Osmolarity")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme+
theme(text = element_text(size = 20))
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
mutate(meanGR = median(growth_rate))%>%
filter(Experiment %in% m63glu_string) %>%
ggplot(aes(x=osmolarity, y=meanGFP, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=150, alpha=0.5) +
ylab('GFP')+
xlab("Osmolarity")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme+
theme(text = element_text(size = 20))
ggsave(filename = "Osmolarity vs GFP.png", height = 7, width = 14)
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
mutate(meanGR = median(growth_rate))%>%
filter(Experiment %in% m63glu_string) %>%
ggplot(aes(x=osmolarity, y=meanGFP, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=150, alpha=0.5) +
ylab('GFP (A.U)')+
xlab("Osmolarity (mOsm)")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme+
theme(text = element_text(size = 20))
ggsave(filename = "Osmolarity vs GFP.png", height = 7, width = 14)
all_conditions_df %>%
ggplot(aes(x=growth_rate, y=meanGFP, color=Experiment)) +
geom_point()+
ylab("GFP (A.U.)")+
xlab("Growth rate (1/min)")+
graph_theme +
theme(text = element_text(size = 20))
ggsave(filename = "Growthrate vs GFP.png", height = 7, width = 14)
all_conditions_df %>%
filter(Experiment %in% m63glu_string) %>%
ggplot(aes(x=growth_rate, y=meanGFP, color=Experiment)) +
geom_point()+
ylab("GFP (A.U.)")+
xlab("Growth rate (1/min)")+
graph_theme +
theme(text = element_text(size = 20))
ggsave(filename = "Growthrate vs GFP.png", height = 7, width = 14)
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
ggplot(aes(x=osmolarity, y=growth_rate, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=100, alpha=0.7) +
ylab('Growth Rate (1/min)')+
xlab("Osmolarity (mOsm)")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
ggplot(aes(x=osmolarity, y=growth_rate, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=150, alpha=0.7) +
ylab('Growth Rate (1/min)')+
xlab("Osmolarity (mOsm)")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
ggplot(aes(x=osmolarity, y=growth_rate, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=120, alpha=0.7) +
ylab('Growth Rate (1/min)')+
xlab("Osmolarity (mOsm)")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme
ggsave(filename = "Growthrate vs Osmolarity Exponential Phase.png", height = 7, width = 14)
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
ggplot(aes(x=osmolarity, y=growth_rate, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=120, alpha=0.7) +
ylab('Growth Rate (1/min)')+
xlab("Osmolarity (mOsm)")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme+
theme(text = element_text(size = 20))
ggsave(filename = "Growthrate vs Osmolarity Exponential Phase.png", height = 7, width = 14)
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
ggplot(aes(x=osmolarity, y=growth_rate, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=120, alpha=0.7) +
ylab('Growth Rate (1/min)')+
xlab("Osmolarity (mOsm)")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme+
theme(text = element_text(size = 20))
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
mutate(meanGR = median(growth_rate))%>%
ggplot(aes(x=osmolarity, y=meanGFP, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=100, alpha=0.7) +
ylab('GFP')+
xlab("Osmolarity")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
mutate(meanGR = median(growth_rate))%>%
ggplot(aes(x=osmolarity, y=meanGFP, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=100, alpha=0.7) +
ylab('GFP')+
xlab("Osmolarity")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme+
theme(text = element_text(size = 20))
ggsave(filename = "GFP vs Osmolarity Exponential Phase all.png", height = 7, width = 14)
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
mutate(meanGR = median(growth_rate))%>%
ggplot(aes(x=osmolarity, y=meanGFP, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=100, alpha=0.7) +
ylab('GFP (A.U.)')+
xlab("Osmolarity")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme+
theme(text = element_text(size = 20))
ggsave(filename = "GFP vs Osmolarity Exponential Phase all.png", height = 7, width = 14)
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
mutate(meanGR = median(growth_rate))%>%
ggplot(aes(x=osmolarity, y=meanGFP, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=100, alpha=0.7) +
ylab('GFP (A.U.)')+
xlab("Osmolarity (mOsm)")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme+
theme(text = element_text(size = 20))
ggsave(filename = "GFP vs Osmolarity Exponential Phase all.png", height = 7, width = 14)
all_conditions_df %>%
filter(Experiment %in% m63glu_string) %>%
ggplot(aes(x=growth_rate, y=meanGFP, color=Experiment)) +
geom_point()+
ylab("GFP (A.U.)")+
xlab("Growth rate (1/min)")+
graph_theme
all_conditions_df %>%
ggplot(aes(x=growth_rate, y=meanGFP, color=Experiment)) +
geom_point()+
ylab("GFP (A.U.)")+
xlab("Growth rate (1/min)")+
graph_theme +
theme(text = element_text(size = 20))
ggsave(filename = "Growthrate vs GFP all.png", height = 7, width = 14)
knitr::opts_chunk$set(echo=FALSE, fig.width=9,fig.height=8)
setwd("D:/01 programs/OneDrive/OneDrive - University of Edinburgh/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/2020_allruns_before_fitderiv/20201002_m63GluCaa_37C_sucrose/20200730_sucrose_platereader_otsB_1000mm_run2")
source('../../20201014_OtsB_analysis_functions.R')
OD <- read.csv("OD.csv")
GFP <- read.csv("GFP.csv")
library('tidyverse')
library('stringr')
library('broom')
library('ggpubr')
# subtract background
OD_time = OD[, 1, drop=F]
OD_mean = rowMeans(OD[1, 2:61])
OD_subtracted = OD[, 2:61]-OD_mean
OD = bind_cols(OD_time, OD_subtracted)
GFP_time = GFP[, 1, drop=F]
GFP_mean = rowMeans(GFP[1, 2:61])
GFP_subtracted = GFP[, 2:61]-GFP_mean
GFP = bind_cols(GFP_time, GFP_subtracted)
# Make it longer
OD.long <-
OD %>%
pivot_longer(2:61,names_to = 'sample') %>%
mutate(group = substr(sample,1,7)) %>%
mutate(type = ifelse(str_detect(group, 'MZ'), "GFP", "WT")) %>%
rename(Time = 'Time.min')
GFP.long <-
GFP %>%
pivot_longer(2:61,names_to = 'sample') %>%
mutate(group = substr(sample,1,7)) %>%
mutate(type = ifelse(str_detect(group, 'MZ'), "GFP", "WT")) %>%
rename(Time = 'Time.min')
# Add groups and summarise
OD.long.summarised <-
OD.long %>% group_by(group, Time) %>%
summarise(meanOD = mean(value), n(), sd = sd(value), sem = sd/sqrt(n()))
GFP.long.summarised <- GFP.long %>% group_by(group, Time) %>%
summarise(meanGFP = mean(value), n(), sd = sd(value), sem = sd/sqrt(n()))
#GFP graph
GFP.long.summarised %>%
ggplot(aes(x=Time, y=meanGFP, colour=group))+
geom_line()+
graph_theme
#OD graph
OD.long.summarised %>%
ggplot(aes(x=Time, y=meanOD, colour=group))+
geom_line()+
graph_theme
aligned_df <-
OD.long %>%
mutate(GFP = GFP.long$value) %>%
rename(OD = value) %>%
group_by(group) %>%
group_split() %>%
map(align_type) %>%
bind_rows() %>%
mutate(GFPdivOD = GFP/OD)
alligned_summary <-
aligned_df %>%
group_by(Time, group) %>%
summarise(meanOD = mean(OD), meanGFP= mean(GFP), n(), meanGFPdivOD = mean(GFPdivOD)) %>%
mutate(type = ifelse(str_detect(group, 'MZ'), "GFP", "WT"))
alligned_summary %>%
ggplot(aes(x=Time, y=meanOD, colour=group))+
geom_point(size=0.7)+
graph_theme
#I process with the find growthrate function to calculate rolling window growthrates
export_df <-
aligned_df%>%
group_by(sample) %>%
group_split() %>%
map(find_growthrate) %>%
bind_rows()
# Here I complete the export df with the times
export_df <-
export_df %>%
group_by(sample) %>%
group_split() %>%
map(find_exponential_end) %>%
bind_rows()
# Here I calculate the Growthrates
maximum_growthrates_export <-
export_df %>%
group_by(sample) %>%
group_split() %>%
map(find_max_growthrate) %>%
bind_rows()
saveRDS(export_df, "export_df.rda")
saveRDS(maximum_growthrates_export, "growthrates.rda")
# now I will plot the growthrate over time
ggarrange(plotlist=
export_df %>%
group_by(sample) %>%
group_split() %>%
map(~ggplot(.x, aes_string(x = 'Time', y = 'growth_rate')) +
geom_point()+
geom_vline(aes(xintercept = exponential_end))+
graph_theme+
ggtitle(paste(.$sample[1]))),
ncol = 5, nrow=12)
ggsave('all_growthrates.png', height = 30, width = 15)
split_final <- export_df %>%
filter(OD>0.02) %>%
group_by(group, sample) %>%
group_split()
MZ_list <- split_final[1:30]
WT_list <- split_final[31:60]
final_ODdivGFP.long <- map2(MZ_list, WT_list, create_final) %>%
bind_rows() %>%
rename(Time= `gfpdf$Time[1:300]`, GFPdivOD = final, Condition = sample) %>%
drop_na()
summarised_ODdivGFP.long <- final_ODdivGFP.long %>%
group_by(group, Time) %>%
summarise(Time = Time, meanGFPdivOD = mean(GFPdivOD), no = n(), stdev = sd(GFPdivOD)) %>%
mutate(GFPlower = meanGFPdivOD-stdev, GFPupper = meanGFPdivOD+stdev) %>%
drop_na()
final_ODdivGFP.long %>%
ggplot(aes(x=Time, y=GFPdivOD, group= Condition, colour = group)) +
geom_line(size=0.25)+
#geom_ribbon(aes(x=Time, ymin=GFPlower, ymax=GFPupper, fill = group), show.legend =FALSE, colour=NA, alpha = 0.5)+
scale_colour_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
scale_fill_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
graph_theme
ggsave("GFP over time.png")
summarised_ODdivGFP.long %>%
ggplot(aes(x=Time, y=meanGFPdivOD, colour = group)) +
geom_line(size=0.25)+
geom_ribbon(aes(x=Time, ymin=GFPlower, ymax=GFPupper, fill = group), show.legend =FALSE, colour=NA, alpha = 0.5)+
scale_colour_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
scale_fill_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
xlab("Normalized GFP (A.U)")+
ylab("Time (Min)")+
graph_theme+
theme(text = element_text(size = 20))
ggsave("meanGFP over time.png", width = 10, height = 7)
summarised_ODdivGFP.long %>%
ggplot(aes(x=Time, y=meanGFPdivOD, colour = group)) +
geom_line(size=0.25)+
geom_ribbon(aes(x=Time, ymin=GFPlower, ymax=GFPupper, fill = group), show.legend =FALSE, colour=NA, alpha = 0.5)+
scale_colour_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
scale_fill_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
ylab("Normalized GFP (A.U)")+
xlab("Time (Min)")+
graph_theme+
theme(text = element_text(size = 20))
ggsave("meanGFP over time.png", width = 10, height = 7)
knitr::opts_chunk$set(echo=FALSE, fig.width=9,fig.height=8)
setwd("D:/01 programs/OneDrive/OneDrive - University of Edinburgh/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/2020_allruns_before_fitderiv/20201002_m63GluCaa_37C_sucrose/20200730_sucrose_platereader_otsB_1000mm_run2")
source('../../20201014_OtsB_analysis_functions.R')
OD <- read.csv("OD.csv")
GFP <- read.csv("GFP.csv")
library('tidyverse')
library('stringr')
library('broom')
library('ggpubr')
# subtract background
OD_time = OD[, 1, drop=F]
OD_mean = rowMeans(OD[1, 2:61])
OD_subtracted = OD[, 2:61]-OD_mean
OD = bind_cols(OD_time, OD_subtracted)
GFP_time = GFP[, 1, drop=F]
GFP_mean = rowMeans(GFP[1, 2:61])
GFP_subtracted = GFP[, 2:61]-GFP_mean
GFP = bind_cols(GFP_time, GFP_subtracted)
# Make it longer
OD.long <-
OD %>%
pivot_longer(2:61,names_to = 'sample') %>%
mutate(group = substr(sample,1,7)) %>%
mutate(type = ifelse(str_detect(group, 'MZ'), "GFP", "WT")) %>%
rename(Time = 'Time.min')
GFP.long <-
GFP %>%
pivot_longer(2:61,names_to = 'sample') %>%
mutate(group = substr(sample,1,7)) %>%
mutate(type = ifelse(str_detect(group, 'MZ'), "GFP", "WT")) %>%
rename(Time = 'Time.min')
# Add groups and summarise
OD.long.summarised <-
OD.long %>% group_by(group, Time) %>%
summarise(meanOD = mean(value), n(), sd = sd(value), sem = sd/sqrt(n()))
GFP.long.summarised <- GFP.long %>% group_by(group, Time) %>%
summarise(meanGFP = mean(value), n(), sd = sd(value), sem = sd/sqrt(n()))
#GFP graph
GFP.long.summarised %>%
ggplot(aes(x=Time, y=meanGFP, colour=group))+
geom_line()+
graph_theme
#OD graph
OD.long.summarised %>%
ggplot(aes(x=Time, y=meanOD, colour=group))+
geom_line()+
graph_theme
aligned_df <-
OD.long %>%
mutate(GFP = GFP.long$value) %>%
rename(OD = value) %>%
group_by(group) %>%
group_split() %>%
map(align_type) %>%
bind_rows() %>%
mutate(GFPdivOD = GFP/OD)
alligned_summary <-
aligned_df %>%
group_by(Time, group) %>%
summarise(meanOD = mean(OD), meanGFP= mean(GFP), n(), meanGFPdivOD = mean(GFPdivOD)) %>%
mutate(type = ifelse(str_detect(group, 'MZ'), "GFP", "WT"))
alligned_summary %>%
ggplot(aes(x=Time, y=meanOD, colour=group))+
geom_point(size=0.7)+
graph_theme
#I process with the find growthrate function to calculate rolling window growthrates
export_df <-
aligned_df%>%
group_by(sample) %>%
group_split() %>%
map(find_growthrate) %>%
bind_rows()
# Here I complete the export df with the times
export_df <-
export_df %>%
group_by(sample) %>%
group_split() %>%
map(find_exponential_end) %>%
bind_rows()
# Here I calculate the Growthrates
maximum_growthrates_export <-
export_df %>%
group_by(sample) %>%
group_split() %>%
map(find_max_growthrate) %>%
bind_rows()
saveRDS(export_df, "export_df.rda")
saveRDS(maximum_growthrates_export, "growthrates.rda")
# now I will plot the growthrate over time
ggarrange(plotlist=
export_df %>%
group_by(sample) %>%
group_split() %>%
map(~ggplot(.x, aes_string(x = 'Time', y = 'growth_rate')) +
geom_point()+
geom_vline(aes(xintercept = exponential_end))+
graph_theme+
ggtitle(paste(.$sample[1]))),
ncol = 5, nrow=12)
ggsave('all_growthrates.png', height = 30, width = 15)
split_final <- export_df %>%
filter(OD>0.02) %>%
group_by(group, sample) %>%
group_split()
MZ_list <- split_final[1:30]
WT_list <- split_final[31:60]
final_ODdivGFP.long <- map2(MZ_list, WT_list, create_final) %>%
bind_rows() %>%
rename(Time= `gfpdf$Time[1:300]`, GFPdivOD = final, Condition = sample) %>%
drop_na()
summarised_ODdivGFP.long <- final_ODdivGFP.long %>%
group_by(group, Time) %>%
summarise(Time = Time, meanGFPdivOD = mean(GFPdivOD), no = n(), stdev = sd(GFPdivOD)) %>%
mutate(GFPlower = meanGFPdivOD-stdev, GFPupper = meanGFPdivOD+stdev) %>%
drop_na()
final_ODdivGFP.long %>%
ggplot(aes(x=Time, y=GFPdivOD, group= Condition, colour = group)) +
geom_line(size=0.25)+
#geom_ribbon(aes(x=Time, ymin=GFPlower, ymax=GFPupper, fill = group), show.legend =FALSE, colour=NA, alpha = 0.5)+
scale_colour_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
scale_fill_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
graph_theme
ggsave("GFP over time.png")
summarised_ODdivGFP.long %>%
ggplot(aes(x=Time, y=meanGFPdivOD, colour = group)) +
geom_line(size=0.25)+
geom_ribbon(aes(x=Time, ymin=GFPlower, ymax=GFPupper, fill = group), show.legend =FALSE, colour=NA, alpha = 0.5)+
scale_colour_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
scale_fill_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
ylab("Normalized GFP (A.U)")+
xlab("Time (Min)")+
graph_theme+
theme(text = element_text(size = 20))
ggsave("meanGFP over time.png", width = 10, height = 7)
