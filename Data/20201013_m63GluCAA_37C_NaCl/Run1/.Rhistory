GFP <- read.csv("/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20200910_m63gly_37C/20200928_Run2/20200923_m63_glycerol_sucrose_run2_GFP.csv")
# subtract background
OD_time = OD[, 1, drop=F]
OD_mean = rowMeans(OD[1, 2:61])
OD_subtracted = OD[, 2:61]-OD_mean
OD = bind_cols(OD_time, OD_subtracted)
GFP_time = GFP[, 1, drop=F]
GFP_mean = rowMeans(GFP[1, 2:61])
GFP_subtracted = GFP[, 2:61]-GFP_mean
GFP = bind_cols(GFP_time, GFP_subtracted)
# Make it longer
OD.long <-
OD %>%
pivot_longer(2:61,names_to = 'sample') %>%
mutate(group = substr(sample,1,7)) %>%
mutate(type = ifelse(str_detect(group, 'MZ'), "GFP", "WT")) %>%
rename(Time = 'Time.min')
GFP.long <-
GFP %>%
pivot_longer(2:61,names_to = 'sample') %>%
mutate(group = substr(sample,1,7)) %>%
mutate(type = ifelse(str_detect(group, 'MZ'), "GFP", "WT")) %>%
rename(Time = 'Time.min')
# Add groups and summarise
OD.long.summarised <-
OD.long %>% group_by(group, Time) %>%
summarise(meanOD = mean(value), n(), sd = sd(value), sem = sd/sqrt(n()))
GFP.long.summarised <- GFP.long %>% group_by(group, Time) %>%
summarise(meanGFP = mean(value), n(), sd = sd(value), sem = sd/sqrt(n()))
#GFP graph
GFP.long.summarised %>%
ggplot(aes(x=Time, y=meanGFP, colour=group))+
geom_line()+
graph_theme
#OD graph
OD.long.summarised %>%
ggplot(aes(x=Time, y=meanOD, colour=group))+
geom_line()+
graph_theme
find_growthrate <-
function(df) {
# This funnction calculates a rolling window growth rate and outputs the aligned df with the growth rate given at each timepoint.
# The interval at which the growthrate is calculated is given by sample seq,
max_growthrate_list <- NA
iterator <- 1
sample_seq <-seq(1,200,1)
number_of_points_growthrate <- 8
for (i in sample_seq) {
df$OD[df$OD <= 0] <- 0.000001 # If I have negative OD values this prevents errors by replacing them with a small number
max_growthrate_list[iterator] <-
summary(lm(log(OD[i:(i+number_of_points_growthrate)])~Time[i:(i+number_of_points_growthrate)],
data = df))$coefficients[2] #coefficients[2] is where r stores the growth rate
iterator <- iterator +1
}
max_growthrate <-
#Here I take the calculated growthrate make it into a tibble and then bind it with the correct columns of the input df
unlist(max_growthrate_list) %>%
as_tibble() %>%
bind_cols(df[sample_seq, 1:7]) %>%
rename(growth_rate = value)
return(max_growthrate)
}
#I process with the find growthrate function to calculate rolling window growthrates
export_df <-
aligned_df%>%
group_by(sample) %>%
group_split() %>%
map(find_growthrate) %>%
bind_rows()
#I process with the find growthrate function to calculate rolling window growthrates
export_df <-
aligned_df%>%
group_by(sample) %>%
group_split() %>%
map(find_growthrate) %>%
bind_rows()
# Here I complete the export df with the times
export_df <-
export_df %>%
group_by(sample) %>%
group_split() %>%
map(find_exponential_end) %>%
bind_rows()
# Here I calculate the Growthrates
maximum_growthrates_export <-
export_df %>%
group_by(sample) %>%
group_split() %>%
map(find_max_growthrate) %>%
bind_rows()
saveRDS(export_df, "export_df.rda")
saveRDS(maximum_growthrates_export, "growthrates.rda")
# now I will plot the growthrate over time
ggarrange(plotlist=
export_df %>%
group_by(sample) %>%
group_split() %>%
map(~ggplot(.x, aes_string(x = 'Time', y = 'growth_rate')) +
geom_point()+
geom_vline(aes(xintercept = exponential_end))+
graph_theme+
ggtitle(paste(.$sample[1]))),
ncol = 5, nrow=12)
ggsave('all_growthrates.png', height = 30, width = 15)
split_final <- export_df %>%
filter(OD>0.02) %>%
group_by(group, sample) %>%
group_split()
MZ_list <- split_final[1:30]
WT_list <- split_final[31:60]
final_ODdivGFP.long <- map2(MZ_list, WT_list, create_final) %>%
bind_rows() %>%
rename(Time= `gfpdf$Time[1:300]`, GFPdivOD = final, Condition = sample) %>%
drop_na()
summarised_ODdivGFP.long <- final_ODdivGFP.long %>%
group_by(group, Time) %>%
summarise(Time = Time, meanGFPdivOD = mean(GFPdivOD), no = n(), stdev = sd(GFPdivOD)) %>%
mutate(GFPlower = meanGFPdivOD-stdev, GFPupper = meanGFPdivOD+stdev) %>%
drop_na()
final_ODdivGFP.long %>%
ggplot(aes(x=Time, y=GFPdivOD, group= Condition, colour = group)) +
geom_line(size=0.25)+
#geom_ribbon(aes(x=Time, ymin=GFPlower, ymax=GFPupper, fill = group), show.legend =FALSE, colour=NA, alpha = 0.5)+
scale_colour_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
scale_fill_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
graph_theme
ggsave("GFP over time.png")
summarised_ODdivGFP.long %>%
ggplot(aes(x=Time, y=meanGFPdivOD, colour = group)) +
geom_line(size=0.25)+
geom_ribbon(aes(x=Time, ymin=GFPlower, ymax=GFPupper, fill = group), show.legend =FALSE, colour=NA, alpha = 0.5)+
scale_colour_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
scale_fill_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
graph_theme
ggsave("meanGFP over time.png")
knitr::opts_chunk$set(echo=FALSE, fig.width=9,fig.height=8)
source('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201014_OtsB_analysis_functions.R')
run1 <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201002_m63GluCaa_37C_sucrose/20200728_sucrose_platereader_otsB_1000mM/export_df.rda')
run2 <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201002_m63GluCaa_37C_sucrose/20200730_sucrose_platereader_otsB_1000mm_run2/export_df.rda')
run3 <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201002_m63GluCaa_37C_sucrose/20200803_sucrose_platereader_otsB_1000mm_run3/export_df.rda')
run4 <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201002_m63GluCaa_37C_sucrose/20201005_run4_clean_confirmation/export_df.rda')
library('tidyverse', quietly = TRUE)
library('stringr', quietly = TRUE)
library('broom', quietly = TRUE)
# add run to the runs then combine
run1 <- run1 %>% mutate(run = 'run1')
run2 <- run2 %>% mutate(run = 'run2')
run3 <- run3 %>% mutate(run = 'run3')
run4 <- run4 %>% mutate(run = 'run4')
allruns <- bind_rows(run1, run2, run3, run4)
allruns.summarized <- allruns %>%
group_by(group, type, Time) %>%
summarize(meanGFP = mean(GFP),
meanOD = mean(OD),
meanGFPdivOD = mean(GFPdivOD),
repeats = n(),
stdevGFPdivOD = sd(GFPdivOD),
stdevGFP = sd(GFP),
stdevOD = sd(OD)) %>%
mutate(lowersemGFPdivOD = meanGFPdivOD - (stdevGFPdivOD/(sqrt(repeats))),
uppersemGFPdivOD = meanGFPdivOD + (stdevGFPdivOD/(sqrt(repeats))),
lowersemOD = meanOD - (stdevOD/(sqrt(repeats))),
uppersemOD = meanOD + (stdevOD/(sqrt(repeats))),
lowersemGFP = meanGFP - (stdevGFP/(sqrt(repeats))),
uppersemGFP = meanGFP + (stdevGFP/(sqrt(repeats))),
)
#GFP graph
allruns.summarized  %>%
ggplot(aes(x=Time, y=meanGFP, colour=group))+
geom_point(size=0.2)+
geom_ribbon(aes(x=Time, ymin = lowersemGFP, ymax = uppersemGFP, fill = group), show.legend =FALSE, colour=NA, alpha = 0.5)+
ggtitle("GFP vs Time")+
graph_theme
#OD graph
allruns.summarized  %>%
ggplot(aes(x=Time, y=meanOD, colour=group))+
geom_point(size=0.2)+
geom_ribbon(aes(x=Time, ymin = lowersemOD, ymax = uppersemOD, fill = group,), show.legend =FALSE, colour=NA, alpha = 0.6)+
ggtitle("OD vs Time")+
graph_theme
growth_rates <-
allruns %>%
group_by(sample, run) %>%
group_split() %>%
map(return_max_growth_rate) %>%
bind_rows() %>%
rename(max_growth = value)
growth_rates %>%
group_by(group, run) %>%
summarize(max_growth_rate = mean(max_growth))
saveRDS(growth_rates, "growthrates_m63GluCAA_37c.rds")
split_final <- allruns %>%
filter(OD>0.02) %>%
group_by(group, sample, run) %>%
group_split()
MZ_list <- split_final[1:120]
WT_list <- split_final[121:240]
create_final <- function(gfpdf, wtdf) {
final <- gfpdf[1:300,]$GFPdivOD - wtdf[1:300,]$GFPdivOD
x <-tibble(gfpdf$Time[1:300], final)
x$group <- gfpdf$group[1:300]
x$sample <- gfpdf$sample[1:300]
return(x)
}
final_ODdivGFP.long <- map2(MZ_list, WT_list, create_final) %>%
bind_rows() %>%
rename(Time= `gfpdf$Time[1:300]`, GFPdivOD = final, Condition = sample) %>%
drop_na()
summarised_ODdivGFP.long <- final_ODdivGFP.long %>%
group_by(group, Time) %>%
summarise(Time = Time, meanGFPdivOD = mean(GFPdivOD), no = n(), stdev = sd(GFPdivOD)) %>%
mutate(GFPlower = meanGFPdivOD-stdev, GFPupper = meanGFPdivOD+stdev) %>%
drop_na()
summarised_ODdivGFP.long %>%
ggplot(aes(x=Time, y=meanGFPdivOD, colour = group)) +
geom_line(size=0.25)+
geom_ribbon(aes(x=Time, ymin=GFPlower, ymax=GFPupper, fill = group), show.legend =FALSE, colour=NA, alpha = 0.5)+
scale_colour_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
scale_fill_manual(
values = c( "#7B4252","#735F80","#4B819A", "#319F8F", "#6FB46C", "#C5BC50"),
labels =  c("0mM_sucrose", "200mM_sucrose", "400mM_sucrose", "600mM_sucrose", "800mM_sucrose", "1000mM_sucrose")
)+
graph_theme
ggsave("meanGFP over time.png")
##take each df sample and output 3 dfs containing exponential, prestationaryb and stationary phase
### Functions to calculate the growth times ###
filter_growthphase <-
function(df) {
exponential_end <-
df$exponential_end
stationary_start <-
df$start_stationary
df <- df %>%
mutate(stage = 'exponential', sucrose_amount=as.numeric(substr(group,4,7))) %>%
mutate_if(is.numeric, list(~ifelse(.==0, 350, .))) %>%
mutate_if(is.numeric, list(~ifelse(.==200, 489, .))) %>%
mutate_if(is.numeric, list(~ifelse(.==400, 663, .))) %>%
mutate_if(is.numeric, list(~ifelse(.==600, 888, .))) %>%
mutate_if(is.numeric, list(~ifelse(.==800, 1139, .))) %>%
mutate_if(is.numeric, list(~ifelse(.==1000, 1413, .)))
exponential_phase_df <-
df %>%
filter(OD >0.02 & Time < exponential_end)
prestationary_phase_df <-
df %>%
filter(Time > exponential_end & Time < stationary_start)
stationary_phase_df <-
df %>%
filter(Time > stationary_start)
sample_df_list <- list(exponential_phase_df, prestationary_phase_df, stationary_phase_df)
return(sample_df_list)
}
### END OF FUNCTIONS ###
# Here I split the groups
allruns_phases <- allruns %>%
group_by(sample) %>%
group_split() %>%
map(filter_growthphase)
# Map dataframes and add osmolarity
exponential_phase <-
map(allruns_phases, 1) %>%
bind_rows() %>%
mutate(stage = "exponential")
prestationary_phase <-
map(allruns_phases, 2) %>%
bind_rows() %>%
mutate(stage = "prestationary")
stationary_phase <-
map(allruns_phases, 3) %>%
bind_rows() %>%
mutate(stage = "stationary")
averageGFP <- bind_rows(exponential_phase, prestationary_phase, stationary_phase) %>%
filter(type=="GFP" & run != "run1")
averageGFP %>%
ggplot(aes(x=sucrose_amount, y=GFPdivOD, group=interaction(stage, group))) +
geom_boxplot(aes(fill=stage, colour= stage), position="identity", alpha=0.7) +
ylab('GFP')+
xlab("OSmolarity (mOsm)")+
ggtitle("GFP expression by growth phase")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme
saveRDS(averageGFP, "GFP_M63glucaa_37c.rds")
ggsave("m63GluCAA_GFP_Sucrose.png", width = 7, height = 7)
source('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201014_OtsB_analysis_functions.R')
# Load all growth rates
sucrose_m63GluCAA_37C_growthrates <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201002_m63GluCaa_37C_sucrose/growthrates_m63GluCAA_37c.rds')
sucrose_m63GluCAA_30C_growthrates <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/202009_OtsB_m63CAAglu_sucrose_30c/growthrates_m63GluCAA_30c.rds')
sucrose_m63Gly_37c_growthrates <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20200910_m63gly_37C/growthrates_m63Gly_37c.rds')
sucrose_m63GlyBetaine_37c_growthrates <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201006_m63gly_Betaine_sucrose/growthrates_m63Glybetaine_37c.rds')
sucrose_m63GluCAABetaine_37c_growthrates <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201009_m63gluCAA_betaine_sucrose/growthrates_m63GluCAAbetaine_37c.rds')
NaCl_m63GluCAA_37c_growthrates <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201013_m63gluCAA_NaCl/growthrates_m63GluCAA_37c_NaCl.rds')
# Load all the GFP values
sucrose_m63GluCAA_37C_GFP <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201002_m63GluCaa_37C_sucrose/GFP_M63glucaa_37c.rds')
sucrose_m63GluCAA_30C_GFP <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/202009_OtsB_m63CAAglu_sucrose_30c/GFP_M63glucaa_30c.rds')
sucrose_m63Gly_GFP <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20200910_m63gly_37C/GFP_M63gly_37c.rds')
sucrose_m63GlyBetaine_37c_GFP <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201006_m63gly_Betaine_sucrose/GFP_M63glybetaine_37c.rds')
sucrose_m63GluCAABetaine_37c_GFP <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201009_m63gluCAA_betaine_sucrose/GFP_M63glucaaBetaine_37c.rds')
NaCl_m63GluCAA_37c_GFP <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201013_m63gluCAA_NaCl/GFP_M63glucaa_37c_NaCl.rds')
knitr::opts_chunk$set(echo=FALSE, fig.width=9,fig.height=8)
source('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201014_OtsB_analysis_functions.R')
# Load all growth rates
sucrose_m63GluCAA_37C_growthrates <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201002_m63GluCaa_37C_sucrose/growthrates_m63GluCAA_37c.rds')
sucrose_m63GluCAA_30C_growthrates <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/202009_OtsB_m63CAAglu_sucrose_30c/growthrates_m63GluCAA_30c.rds')
sucrose_m63Gly_37c_growthrates <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20200910_m63gly_37C/growthrates_m63Gly_37c.rds')
sucrose_m63GlyBetaine_37c_growthrates <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201006_m63gly_Betaine_sucrose/growthrates_m63Glybetaine_37c.rds')
sucrose_m63GluCAABetaine_37c_growthrates <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201009_m63gluCAA_betaine_sucrose/growthrates_m63GluCAAbetaine_37c.rds')
NaCl_m63GluCAA_37c_growthrates <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201013_m63gluCAA_NaCl/growthrates_m63GluCAA_37c_NaCl.rds')
# Load all the GFP values
sucrose_m63GluCAA_37C_GFP <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201002_m63GluCaa_37C_sucrose/GFP_M63glucaa_37c.rds')
sucrose_m63GluCAA_30C_GFP <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/202009_OtsB_m63CAAglu_sucrose_30c/GFP_M63glucaa_30c.rds')
sucrose_m63Gly_GFP <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20200910_m63gly_37C/GFP_M63gly_37c.rds')
sucrose_m63GlyBetaine_37c_GFP <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201006_m63gly_Betaine_sucrose/GFP_M63glybetaine_37c.rds')
sucrose_m63GluCAABetaine_37c_GFP <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201009_m63gluCAA_betaine_sucrose/GFP_M63glucaaBetaine_37c.rds')
NaCl_m63GluCAA_37c_GFP <- readRDS('/home/betaglutamate/OneDrive/00_PhD/00_Phd_data/02_Project_Trehalose_synthesis/20201002_all_clean_runs_final/20201013_m63gluCAA_NaCl/GFP_M63glucaa_37c_NaCl.rds')
library('tidyverse', quietly = TRUE)
library('stringr', quietly = TRUE)
library('broom', quietly = TRUE)
## add osmolarity values
sucrose_m63GluCAA_37C_growthrates_GFP <-
sucrose_m63GluCAA_37C_growthrates[1:(nrow(sucrose_m63GluCAA_37C_growthrates)/2),] %>%
mutate(group = substr(sample,1,7), Type = "M63GluCAA_37C_Sucrose", osmolarity=as.numeric(substr(group,4,7))) %>%
mutate_if(is.numeric, funs(ifelse(.==0, 350, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==200, 489, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==400, 663, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==600, 888, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==800, 1139, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==1000, 1413, .)))
sucrose_m63GluCAA_30C_growthrates_GFP <-
sucrose_m63GluCAA_30C_growthrates[1:(nrow(sucrose_m63GluCAA_30C_growthrates)/2),] %>%
mutate(group = substr(sample,1,7), Type = "M63GluCAA_30C_Sucrose", osmolarity=as.numeric(substr(group,4,7))) %>%
mutate_if(is.numeric, funs(ifelse(.==0, 348, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==200, 471, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==400, 626, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==600, 797, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==800, 950, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==1000, 1181, .)))
sucrose_m63Gly_37c_growthrates_GFP <-
sucrose_m63Gly_37c_growthrates[1:(nrow(sucrose_m63Gly_37c_growthrates)/2),] %>%
mutate(group = substr(sample,1,7), Type = "M63Gly_37C_Sucrose", osmolarity=as.numeric(substr(group,4,7))) %>%
mutate_if(is.numeric, funs(ifelse(.==0, 250, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==200, 380, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==400, 543, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==600, 730, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==800, 949, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==1000, 1201, .)))
sucrose_m63GlyBetaine_37c_growthrates_GFP <-
sucrose_m63GlyBetaine_37c_growthrates[1:(nrow(sucrose_m63GlyBetaine_37c_growthrates)/2),] %>%
mutate(group = substr(sample,1,7), Type = "M63Glybetaine_37C_Sucrose", osmolarity=as.numeric(substr(group,4,7))) %>%
mutate_if(is.numeric, funs(ifelse(.==0, 250, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==200, 380, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==400, 543, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==600, 730, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==800, 949, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==1000, 1201, .)))
sucrose_m63GluCAABetaine_37C_growthrates_GFP <-
sucrose_m63GluCAABetaine_37c_growthrates[1:(nrow(sucrose_m63GluCAABetaine_37c_growthrates)/2),] %>%
mutate(group = substr(sample,1,7), Type = "M63GluCAABetaine_37C_Sucrose", osmolarity=as.numeric(substr(group,4,7))) %>%
mutate_if(is.numeric, funs(ifelse(.==0, 348, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==200, 471, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==400, 626, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==600, 797, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==800, 950, .))) %>%
mutate_if(is.numeric, funs(ifelse(.==1000, 1181, .)))
NaCl_m63GluCAA_37C_growthrates_GFP <-
NaCl_m63GluCAA_37c_growthrates[1:(nrow(NaCl_m63GluCAA_37c_growthrates)/2),] %>%
mutate(group = substr(sample,1,7), Type = "M63GluCAA_37C_NaCl", osmolarity=as.numeric(substr(group,4,7))) %>%
mutate_if(is.numeric, list(~ifelse(.==0, 276, .))) %>%
mutate_if(is.numeric, list(~ifelse(.==200, 539, .))) %>%
mutate_if(is.numeric, list(~ifelse(.==400, 801, .))) %>%
mutate_if(is.numeric, list(~ifelse(.==600, 1045, .))) %>%
mutate_if(is.numeric, list(~ifelse(.==800, 1666, .))) %>%
mutate_if(is.numeric, list(~ifelse(.==1000, 2065, .)))
## summarize values over condition and stage
# M63GluCAA at 30C with sucrose
sucrose_m63GluCAA_30C_GFP_mid <- sucrose_m63GluCAA_30C_GFP[,2:ncol(sucrose_m63GluCAA_30C_GFP)] %>%
group_by(sample, stage, run) %>%
filter(stage == "exponential") %>%
summarize(meanGFP =mean(GFPdivOD))
sucrose_30C_ready <-
bind_cols(sucrose_m63GluCAA_30C_GFP_mid,
growth_rate = sucrose_m63GluCAA_30C_growthrates_GFP$max_growth,
osmolarity = sucrose_m63GluCAA_30C_growthrates_GFP$osmolarity) %>%
mutate(group = substr(sample,1,7)) %>%
mutate(Experiment = "M63GluCAA_30C")
# M63GluCAA at 37C with sucrose
sucrose_m63GluCAA_37C_GFP_mid <- sucrose_m63GluCAA_37C_GFP[,2:ncol(sucrose_m63GluCAA_37C_GFP)] %>%
group_by(sample, stage, run) %>%
filter(stage == "exponential") %>%
summarize(meanGFP =mean(GFPdivOD)) %>%
mutate(Experiment = "M63GluCAA_37C")
sucrose_ready <-
bind_cols(sucrose_m63GluCAA_37C_GFP_mid,
growth_rate = sucrose_m63GluCAA_37C_growthrates_GFP$max_growth[31:120], #remember you removed run 1 because data was anomalous
osmolarity = sucrose_m63GluCAA_37C_growthrates_GFP$osmolarity[31:120]) %>%
mutate(group = substr(sample,1,7))
# M63Gly at 37C with sucrose
M63Gly_37C_mid <- sucrose_m63Gly_GFP[,2:ncol(sucrose_m63Gly_GFP)] %>%
group_by(sample, stage, run) %>%
filter(stage == "exponential") %>%
summarize(meanGFP =mean(GFPdivOD)) %>%
mutate(Experiment = "M63Gly_37C")
M63Gly_37C_ready <-
bind_cols(M63Gly_37C_mid,
growth_rate = sucrose_m63Gly_37c_growthrates_GFP$max_growth,
osmolarity = sucrose_m63Gly_37c_growthrates_GFP$osmolarity) %>%
mutate(group = substr(sample,1,7))
# M63Glybetaine at 37C with sucrose
M63Glybetaine_37C_mid <- sucrose_m63GlyBetaine_37c_GFP[,2:ncol(sucrose_m63GlyBetaine_37c_GFP)] %>%
group_by(sample, stage, run) %>%
filter(stage == "exponential") %>%
summarize(meanGFP =mean(GFPdivOD)) %>%
mutate(Experiment = "M63GlyBetaine_37C")
M63Glybetaine_37C_ready <-
bind_cols(M63Glybetaine_37C_mid,
growth_rate = sucrose_m63GlyBetaine_37c_growthrates_GFP$max_growth,
osmolarity = sucrose_m63GlyBetaine_37c_growthrates_GFP$osmolarity) %>%
mutate(group = substr(sample,1,7))
# M63GluCAABetaine at 37C with sucrose
sucrose_m63GluCAABetaine_37C_GFP_mid <- sucrose_m63GluCAABetaine_37c_GFP[,2:ncol(sucrose_m63GluCAABetaine_37c_GFP)] %>%
group_by(sample, stage, run) %>%
filter(stage == "exponential") %>%
summarize(meanGFP =mean(GFPdivOD)) %>%
mutate(Experiment = "M63GluCAABetaine_37C")
M63GluCAAbetaine_37C_ready <-
bind_cols(sucrose_m63GluCAABetaine_37C_GFP_mid,
growth_rate = sucrose_m63GluCAABetaine_37C_growthrates_GFP$max_growth,
osmolarity = sucrose_m63GluCAABetaine_37C_growthrates_GFP$osmolarity) %>%
mutate(group = substr(sample,1,7))
# M63GluCAA_NaCl at 37C with NaCl
NaCl_m63GluCAA_37C_GFP_mid <- NaCl_m63GluCAA_37c_GFP[,2:ncol(NaCl_m63GluCAA_37c_GFP)] %>%
group_by(sample, stage, run) %>%
filter(stage == "exponential") %>%
summarize(meanGFP =mean(GFPdivOD)) %>%
mutate(Experiment = "NaCl_M63GluCAA_37C")
NaCl_M63GluCAA_37C_ready <-
bind_cols(NaCl_m63GluCAA_37C_GFP_mid,
growth_rate = NaCl_m63GluCAA_37C_growthrates_GFP$max_growth,
osmolarity = NaCl_m63GluCAA_37C_growthrates_GFP$osmolarity) %>%
mutate(group = substr(sample,1,7))
#----------------------end of cleaning data sets----------------#
# Bind all the different conditons
all_conditions_df <- bind_rows(sucrose_30C_ready,
sucrose_ready,
M63Gly_37C_ready,
M63Glybetaine_37C_ready,
M63GluCAAbetaine_37C_ready,
NaCl_M63GluCAA_37C_ready)
### geom point plots
all_conditions_df %>%
ggplot(aes(x=growth_rate, y=meanGFP, color=group)) +
geom_point()+
ggtitle("Growth rate vs meanGFP grouped by group")+
graph_theme
all_conditions_df %>%
ggplot(aes(x=growth_rate, y=meanGFP, color=interaction(Experiment))) +
geom_point()+
ggtitle("Growth rate vs meanGFP grouped by experiment")+
graph_theme
all_conditions_df %>%
ggplot(aes(x=osmolarity, y=growth_rate, color=group))+
geom_point(aes(shape=Experiment)) +
ggtitle("Osmolarity vs growth rate grouped by group and experiment")+
graph_theme
### geom boxplots
# all_conditions_df %>%
#   group_by(group, Experiment) %>%
#   mutate(meanGR = median(growth_rate))%>%
#   ggplot(aes(x=meanGR, y=meanGFP, group=interaction(group, Experiment)))+
#     geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=0.0008, alpha=0.7) +
#     ylab('GFP')+
#     xlab("Growth Rate")+
#     ggtitle("growth rate vs GFP grouped by group and experiment")+
#     graph_theme
# ggsave(filename = "Growthrate vs GFP boxplot.png", height = 7, width = 7)
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
mutate(meanGR = median(growth_rate))%>%
ggplot(aes(x=osmolarity, y=meanGFP, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=100, alpha=0.7) +
ylab('GFP')+
xlab("Osmolarity")+
ggtitle("osmolarity vs GFP grouped by group and experiment")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme
# ggsave(filename = "GFP vs Osmolarity Exponential Phase.png", height = 7, width = 7)
all_conditions_df %>%
group_by(group, Experiment) %>%
mutate(osmolarity = mean(osmolarity)) %>%
ggplot(aes(x=osmolarity, y=growth_rate, group=interaction(group, Experiment)))+
geom_boxplot(aes(fill=Experiment, colour =Experiment), position="identity", width=50, alpha=0.7) +
ylab('Growth Rate')+
xlab("Osmolarity")+
ggtitle("growth rate vs Osmolarity grouped by group and experiment")+
theme(axis.text.x = element_text(angle=65, vjust=0.6))+
graph_theme
# ggsave(filename = "Growthrate vs Osmolarity Exponential Phase.png", height = 7, width = 7)
